version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: helpdesk
      POSTGRES_USER: helpdesk
      POSTGRES_PASSWORD: helpdesk123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U helpdesk"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: helpdesk
      MINIO_ROOT_PASSWORD: helpdesk123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"
      - "8025:8025"

  api:
    build:
      context: ../../apps/api
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://helpdesk:helpdesk123@postgres:5432/helpdesk
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: helpdesk
      MINIO_SECRET_KEY: helpdesk123
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ../../apps/api:/app
      - /app/node_modules

  web:
    build:
      context: ../../apps/web
      dockerfile: Dockerfile
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      - api
    volumes:
      - ../../apps/web:/app
      - /app/node_modules

  worker:
    build:
      context: ../../apps/worker
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://helpdesk:helpdesk123@postgres:5432/helpdesk
      REDIS_URL: redis://redis:6379
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../../apps/worker:/app
      - /app/node_modules

volumes:
  postgres_data:
  redis_data:
  minio_data:
